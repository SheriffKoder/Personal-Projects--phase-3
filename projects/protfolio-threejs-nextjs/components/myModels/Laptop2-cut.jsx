/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/laptop2.glb -o components/myModels/Laptop2.jsx -r public 
Author: KangaroOz 3D (https://sketchfab.com/KangaroOz-3D)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/macbook-pro-2021-37763335f74b497e91906986b170b5d1
Title: MacBook Pro 2021
*/

import React, { useRef, useMemo, useLayoutEffect } from 'react'
import * as THREE from "three"
import { MeshReflectorMaterial, useGLTF } from '@react-three/drei'
import { Camera, MeshBasicMaterial } from 'three'
import { useTexture } from '@react-three/drei';


//function generates rounded corner rectangle
export function BoxBlendGeometry({ width = 1, height = 1, radius = 0.2, depth = 1 }) {
  const geometry = useRef()
  const shape = useMemo(() => {
    const s = new THREE.Shape()
    s.moveTo(-width / 2, -height / 2 + radius)
    s.lineTo(-width / 2, height / 2 - radius)
    s.absarc(-width / 2 + radius, height / 2 - radius, radius, 1 * Math.PI, 0.5 * Math.PI, true)
    s.lineTo(width / 2 - radius, height / 2)
    s.absarc(width / 2 - radius, height / 2 - radius, radius, 0.5 * Math.PI, 0 * Math.PI, true)
    s.lineTo(width / 2, -height / 2 + radius)
    s.absarc(width / 2 - radius, -height / 2 + radius, radius, 2 * Math.PI, 1.5 * Math.PI, true)
    s.lineTo(-width / 2 + radius, -height / 2)
    s.absarc(-width / 2 + radius, -height / 2 + radius, radius, 1.5 * Math.PI, 1 * Math.PI, true)
    return new THREE.Shape(s.getPoints(10))
  }, [width, height, radius, depth])
  const config = useMemo(() => ({ depth, bevelEnabled: false }), [depth])
  useLayoutEffect(() => {
    geometry.current.translate(0, 0, -depth / 2)
    geometry.current.computeVertexNormals()
  }, [shape])
  return <extrudeGeometry ref={geometry} args={[shape, config]} />
}


export function Laptop2_body(props) {
  const { nodes, materials } = useGLTF('/models/laptop2.glb');


  return (
    <group {...props} dispose={null}>
      <group position={[0.121, 0.007, 0]}>
        {/* <mesh geometry={nodes.Object_6.geometry} material={materials.MacBookPro} /> */}
        {/* <mesh geometry={nodes.Object_8.geometry} material={materials.MacBookPro} /> */}
      </group>
      <mesh geometry={nodes.Object_4.geometry} material={materials.MacBookPro} />

      <mesh position-y={0.012} rotation-x={-Math.PI / 2}>

        {/* <planeGeometry args={[0.26,0.355]}/> */}
        <BoxBlendGeometry radius={0.01} depth={0.0001} width={0.25} height={0.355}/>
        {/* <meshLambertMaterial color="#cf0606"/> */}
        <MeshReflectorMaterial
        blur={[50,50]}
        resolution={1028}
        mixBlur={1}
        mixStrength={70}
        roughness={0.95}
        depthScale={1}
        opacity={0.5}
        transparent
        minDepthThreshold={0.4}
        maxDepthThreshold={1.4}
        color="#333"
        metalness={0.7}
        />
      </mesh>


    </group>
  )
}

export function Laptop2_screen(props) {
  const { nodes, materials } = useGLTF('/models/laptop2.glb');
  const texture_1 = useTexture("/images/laptop-wallpaper.png");

  return (
    <group {...props} dispose={null}>
      <group position={[0.121, 0.007, 0]}>
        <mesh geometry={nodes.Object_6.geometry} material={materials.MacBookPro}/>
                 {/* <mesh geometry={nodes.Object_8.geometry} material={materials.MacBookPro} /> */}


        <mesh rotation-y={-Math.PI /2} position={[-0.01, 0.125, 0]}>
          <planeGeometry args={[0.342,0.21]}/>
          <meshBasicMaterial map={texture_1} />

        </mesh>

      </group>
      {/* <mesh geometry={nodes.Object_4.geometry} material={materials.MacBookPro} /> */}
    </group>
  )
}


useGLTF.preload('/models/laptop2.glb')
