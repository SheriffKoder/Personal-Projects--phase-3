
///////////////////////////////////////////////////////////////
////Asking Questions

- ask about the problem not what is done toward the problem to get better answers
- describe it in "one" sentence

Title
problem introduction
    part of code
relevant tags
-> recheck as the answerer

What do you think the problem is?
What exactly do you want to happen?
What is actually happening?
How did you get there?
What have you tried so far?



///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////
////The Internet




Network; communication between two computers - physical or wireless
Router; a device in between all ends connected in the same Network
The Web; service on top of the internet, where a document is arranged accessed addressed

Internet; 
hardware/infrastructure/technical backbone - a wire
"network of servers talking to each other"
these servers are connected to the "same network"
connected through optical fiber cables
files on the data centers are stored on solid hard-drives
"each server has a unique ip address"

Web page; document with a unique domain name
Web site; collection of pages
Web server; computer host/send the code-files/media-assets
Browser; application


Every connected device/server has a 
unique-protocol-address or IP/domain



////In your own words, explain what happens when you run a search on google.com

type google.com
    browser asks the computer if it recognizes the ip address 
    of that domain in the OS local DNS cache
if not found
    the client computers connected to router 
    router connected to a local ISP
    ISP connected to the internet

    browser goes to the DNS server(address book) in the ISP Data center
    makes an HTTP DNS Query download-request using TCP/IP protocol
    the request contains headers, meta-data
    finds the ip address of the destination

    client request then is released from the ISP
    to go through the internet (containing guiding routers)
    to reach its destination
    the website in question is stored on a server 
    where it is generated dynamically or the website code is stored there
    and based on the client request, the code sends a back response
    either in rendered-views or json data (if its an API)
    to be able to be used by the client
    the client might want .html and the browser displays it
    or json data to use it in their front end (like mobile apps)


////

Internet routers:
routers along this path help direct the packets (data sending format)
each step forward, packet get wrapped in layer of the router it visits
each step backwards, packet get a layer removed of the router it visits
till reach last router then to the client


DNS:
when you register a Domain name
it is registered by a registrar (ICANN)
the record is then maintained by a registry operator
who propagates the Domain to other DNS servers around the world

Http protocol:
a standard about how the request sent between clients/servers
should look like

Rendered-views response pages:
The browser generates an in-memory DOM tree from the parsed HTML, 
generates an in-memory CSSOM structure from the parsed CSS, 
compiles and executes the parsed JavaScript.


URL: Uniform Resource locator
Relative: normal, Absolute: local directory


http://www.example.com:80/ path/to/myfile.html?key1=value1&key2#bookmark
  1    2            3   4           5              6            7

1) protocol
2) authority
3) domain (checked before authority on DNS lookup)
4) port
5) path to the resource
6) extra parameters, key/value pairs, separated bt &, 
7) anchor: bookmark inside the resource, #identifier




///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////
Command Line Skills

# whoami                        //tell username
# pwd -P                        //current working directory


DIRECTORY
# cd                              //go to home
# cd D                            //press tab console will auto-fill with the Documents directory
# cd path                         //go to directory
# cd ..                           //up one path
# ls                              //show list of files in current directory
can add any path to it, -a (hidden), -l (detailed), -lh (MB detailed), 
 -lhS (S sort by size), -lt (t sort by time), -lr (r reverse)


CREATE
# touch file1.txt file2.txt     //create multiple files
# mkdir name                    //create a folder
# mkdir -v name                 //verbose mode
# mkdir -p A/B/C                //create folder A in it folder B in it folder C

COPY / LINK
# ln file.txt file_copy.txt     //copy a file to another file (hard linking)
# ln file.txt -s                //a link file to the file or directory
# ln file.txt -f                //force already created files

# cp source.txt destination.txt/directory      //copy content to a file or directory
# cp -v source.txt destination.txt/directory   //with verbose mode
# cp -Rv folderA folderB                       //copy folderA contents to folderB with vmode
# cp -f source.txt destination.txt             //force permission
# cp -i source.txt destination.txt             //notify if overwrite



REMOVE / MOVE
# rm file.txt                   //remove file
# rm -Rv folder                 //remove folder              
# mv file1.txt file2.txt        //copy file1 to file2 and remove file1
# cat 

PIPE
# ls -a ~ | grep _                //the output of one command to the input to another command.


